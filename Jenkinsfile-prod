pipeline {
    
    agent any
    environment {
        //DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        DOCKER_IMAGE_NAME = "saaral123/backendtest"
    }
    
    stages{
        stage('Cleanup Workspace') {
            steps {
                deleteDir()  
            }
        }

        stage ('checkout') {
            steps {
               git branch: 'devopstestimp2', url: 'https://github.com/Sunbird-Saral/Project-Saral.git' 
            }
        }

        stage('run test'){
            steps{
            sh '''
            cd v1.0/backend/
            /usr/bin/npm install
            /usr/bin/npm run test
            '''
            }
        }

        stage('SonarQube analysis') {
            steps{
            withSonarQubeEnv('sonarqube-10.1') {
            sh '''
            cd v1.0/backend/
            /usr/bin/npm run sonar
            '''
            }    
            }
        }
        
        stage ('docker_image_build'){
            steps {
                sh 'chmod +x ./build_image.sh'
                sh './build_image.sh'
            }
        }

        // Add a new stage for Trivy scanning
        stage('Trivy Scan') {
            steps {
                script {
                    def trivyOutput = sh(
                        script: 'trivy saaral123/backendtest:latest', 
                        returnStatus: true
                    )

                    if (trivyOutput == 0) {
                        echo 'No vulnerabilities found.'
                    } else {
                        currentBuild.result = 'FAILURE'
                        error 'Vulnerabilities found. Build failed.'
                    }
                }
            }
        }

        stage('Pull Docker Image') {
            steps {
                script {
                    sh 'echo "Pulling Docker Image..."'
                     // Generate the dynamic image tag based on the build number
                    def image_name = "backendtest"
                    def image_tag = "2.0"
                    image_tag = "${image_tag}-${BUILD_NUMBER}"
                    sh "docker pull saaral123/${image_name}:${image_tag}"
                    sh 'docker images'  // Display the list of Docker images on the Jenkins server
                }
            }
       }

        stage ('deploy to EKS'){
            steps{
                sh 'export KUBECONFIG=/var/lib/jenkins/.kube/config'
                sh 'export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/home/jenkins/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'
                sh 'chmod +x ./deploy_EKS.sh'
                sh './deploy_EKS.sh'
            }
        }

    }
}
