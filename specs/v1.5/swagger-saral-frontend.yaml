
swagger: "2.0"
info:
  description: "Store School information"
  version: "1.0.0"
  title: "SARAL APIs "
tags:
- name: "School"
- name: "Student"
- name: "Marks"
- name: "ROI"
- name: "Brand"


securityDefinitions:
    Bearer:
      type: apiKey
      name: Authorization
      in: header

    basicAuth:
      type: basic
schemes:
  - "https"
  - "http"


paths:
  
  /schools/login:        
    post:
      tags:
      - School
      summary: "LOGIN"
      description: ""
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/LoginSchoolBody"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoginSchool"
        "422":
          description: "School Id or Password is not correct."
        "500":
          description: "Server error or State/District/School is locked for scanning"
          
  /fetchStudentsandExamsByQuery:
    post:
      security:
        - Bearer: []
      tags:
      - Student
      summary: "Get Exam Details by class Id"
      parameters:
       - in: body
         name: body
         schema:
            type: object
            required:
              - classId
            properties:
              classId:
                type: string
                example: "2"
              section:
                type: string
                example: "D"
              subject:
                type: string
                example: "Hindi 11/02/2021"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/fetchStudentsandExamsByQuery"
        "404":
          description: "Please send classId"
        "500":
          description: "Server error or State/District/School is locked for scanning"
          
  /getSavedScan:  
    post:
      security:
        - basicAuth: []
      tags:
      - Marks
      summary: "This API accepts Basic Auth which expects username/password instead of bearer token .This is specific to this particular API and the reason is, apart from the frontend Saral App this API (/getSavedScan) may be used by other Apps or jobs to fetch saved scan details to process or push to CCube database."
      parameters:
        - in : body
          name: body
          schema:
            $ref: "#/definitions/GetSavedScanBody"
      responses:
        "201":
          description: "successful operation"
          schema: 
            $ref: "#/definitions/GetSavedScanResponse"
            
  /saveMarks:
    put:
      security:
        - Bearer: []
      tags:
        - Marks
      summary: "create marks for students exam"
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/SaveMarksBody"
          description: Create marks for students .Application may send  "X-App-Version" in header.

      responses:
        "201":
          description: "successful operation"
          schema: 
            $ref: "#/definitions/GetSavedScanResponse"
        "400":
          description: "Custom message can be set to message about the error or failure"
        "500":
          description: "Server error or State/District/School is locked for scanning"
    
  /roi/{examId}:
    get:
      security:
        - Bearer: []
      tags:
      - ROI
      summary: "Get ROI data"
      parameters:
      - in: path
        name: examId
        type: number
        description: examId is required for fetching rois 
        required: true
      - in: query
        name: set
        type: string
        required: false

      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/rois"
        "400":
          description: "unsuccessful operation"
          
  /brand:
    get:
      security:
        - Bearer: []
      tags:
        - Brand
      summary: "Get Brand for state"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CreateBrandBody"
        "404":
          description: "Brand does not exist."
          
  /brand/default:
    get:
      tags:
        - Brand
      summary: "Get Default Brand"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/DefaultBrand"
        "404":
          description: "Brand does not exist."
  


definitions:

  LoginSchool:
    type: object
    properties:
      school:
        type: object
        properties:
          name:
            type: string
            example: "Dummy school 1"
          schoolId:
            type: string
            example: "up001"
          state:
            type: string
            example: "up"
          autoSync:
            type: boolean
            default: false
            example: true
          autoSyncFrequency:
            type: number
            description: "Auto Sync frequency in milli-seconds. Saral App uses syncs data in local storage to backend based on this frequency value"
            default: 600000
            example: 900000
          storeTrainingData:
            type: boolean
            description: "If this is set to true frontend application will return base 64 encoded images . In savesMarksAPI and getSavedScanAPI these APIs will get data and value of encoded images will be stored in these fields studentIdTrainingData and trainningData, studentIdTrainingData field will contain base 64 encoded images of rollnumber and trainningData field will contain base 64 encoded images for marks. "
            default: false
            example: true
          tags:
            type: boolean
            example: true
          supportEmail:
            type: string
            example: "abc&gmail.com ,xyz@gmail.com"
          isMinimalMode:
            type: boolean
            description: "If this is set to true frontend application will have minimal screens in ui. In savesMarksAPI and getSavedScan we are using roiId as our unique key and fetching data from this key ."
            default: false
            example: true
          offlineMode:
            type: boolean
            example: true
            description: "If this is set to true , app can operate in offline mode after frist navigation ."
          district:
            type: string
            example: "district 1"
          userId:
            type: string
            description: "school user id"
            example: "9417856"
            
      classes:
            $ref: '#/definitions/classResponse'

      token:
        type: object
        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJvZDAwMSIsImlhdCI6MTY1NzU0MDkwMX0.tMDeXo5PjsBo6i5y55sWMUqBDaVI3OghY9AFWqsFuFc"
  
  classResponse:
        type: array
        items:
          type: object
          properties:
            sections:
              type: array
              items:
                properties:
                  section:
                    type: string
                    example: "A"
            classId:
              type: string
              example: "2"
            className:
              type: string
              example: "Class-2"
        
        
  LoginSchoolBody:
    type: object
    required:
       - schoolId
       - password
       - classes
    properties:
      schoolId:
        type: string
        description: "It can be school id or school user id"
        example: "u001"
      password:
        type: string
        example: "123"
      classes:
        type: boolean
        default: true
        example: "true"
    
        
  GetSavedScanBody:
    type: object
    properties:
      classId:
        type: string
        example: 2
      section:
        type: string
        example: "B"
      subject:
        type: string
        example: "Maths"
      fromDate:
        type: string
        example: "24-12-2021"
      schoolId:
        type: string
        example: "u001"
      limit:
        type: number
        example: 10
        description: "Page size. Currently this parameter is not used by Saral App"
      page:
        type: number
        example: 1
        description: "Page Number to be retrieved. Currently this parameter is not used by Saral App"
      downloadRes:
        type: boolean
        example: false
        description: "Download Result. Currently this parameter is always set to false by Saral App ."
      roiId:
        type: string
        description: roiId field is optional field . It is available when minimal mode is enable.RoiId field is global across school or organisation .
        example: "28"
        
  GetSavedScanResponse:
    type: object
    properties: 
      data:
        $ref: '#/definitions/GetSavedScan'
        
  GetSavedScan:
        type: array
        items:
          type: object
          properties:
            studentIdTrainingData:
              type: array
              items:
                type: string
                description: "It contains base 64 encoded images of rollnumber "
                example: "/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAIQAABtbnRyUkdC\nIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAA\nAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlk\nZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAA\nAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAA\nAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAA\nAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3Bh\ncmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADT\nLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAw\nADEANv/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB\nAQEBAQEBAQEBAQEBAQEBAf/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB\nAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/AABEIABwAHAMBIgACEQEDEQH/xAAbAAABBAMA\nAAAAAAAAAAAAAAAGAQQFCAMHCv/EACkQAAIBAwMEAAYDAAAAAAAAAAECAwQFEQAGIRIiMUEHFFFx\ngZETobH/xAAYAQACAwAAAAAAAAAAAAAAAAAEBQABAv/EACURAQACAQMDAwUAAAAAAAAAAAECESEA\nAzESQYEEYfAyUZGh8f/aAAwDAQACEQMRAD8A6wpYaCngnnMaJHCCzuR0qiAKWY+gPyPeh+3bk2rc\nZVjp7jQzuzCMKk0bKW54JDEdWT4zn6DOj+pgWRJ6eSnQwzRmOVXIAKNgNnB4GPeR99Vi+MW3KCHa\n9Ntr4fWlTuaqutERUUEsrSUsYrKVpZZGE5VVEaSFuoYwDxzpH6XZ2t2XRu9UOQkAgUNv7L5+xprc\ng5y00mex2cD4z2utWKe30a4ZaaM9vHafB8HIxnPn8aRaa3gYenTqHB4xz9tONq2242rbtntd4mWs\nuVJRwJVTsykySpGobkYB7lJzzyR9dSsvWHYLBGADjx7/AL0PMIyQeqI0So9mgeCuDxktddVVZzzk\nKbPhzkvWs/i7vNtp0FClNDVTLdJfl5amnhaX5cYZiW6OphhVxkAHkAHjgDte/bBtakjqKG0Xi8XO\nqQGarFOWlywwQrTyqVAz6I8kD1qwiTyBXTtKZz0kZGe30TqHqpmdACqDkYwuMZZRxz9P1ouPrdra\n2zblsspFjMauq5z31CDFVld+xfA/jP8AaNYbJdDfLTS3v+GqpJJgc0dSemVCqqxBUOygdxAIJ5B0\nSRyGRFfHJAz1HnOBnwD/AL+tRtOoiaPpzyASDyMkfv1p/kjOCRkk8H2TnQkk3JLGPSOaW6GseNVK\nCkcv0iX2Hg7cfHX/2Q==\n"
            studentAvailability:
              type: boolean
              example: true
            marksInfo:
              $ref: '#/definitions/MarksInfo'
            section: 
              type: string
              example: "D"
            studentId:
              type: string
              description: student ID which is stored in backend .
              example: "1210001"
            predictedstudentId:
              type: string
              description: student ID which is predicted from layout .
              example: "1210001"
            predictionConfidence:
              type: array
              description: accuracy of getting predicted student Id.
              items:
                type: string
                example: "89.8"
            securedMarks:
              type: number
              example: 3
            obtainedMarksTrainingData:
              type: array
              description: It contains base 64 encoded images of obtained marks .
              items:
                type: string
            obtainedMarksConfidence:
              type: array
              description: accuracy of getting predicted obtained marks.
              items:
                type: string
                example: "89.8"
            maxMarksTrainingData:
              type: array
              description: It contains base 64 encoded images of max marks .
              items:
                type: string
            maxMarksConfidence:
              type: array
              description: accuracy of getting predicted max marks.
              items:
                type: string
                example: "89.8"
            totalMarks:
              type: number
              example: 5
            schoolId:
              type: string
              example: "u001"
            examDate:
              type: string
              example: "2021-09-17"
            subject:
              type: string
              example: Maths
            roiId:
              type: string
              description: roiId field is optional field . It is available when minimal mode is enable. RoiId field is global across school or organisation.
              example: "28"
            examId:
              type: string
              example: "18"
            createdOn:
              type: string
              example: "121088802"
            userId:
              type: string
              description: "school user id"
              example: "9417856"
  
  fetchStudentsandExamsByQuery:
    type: object
    properties:
      students: 
        $ref: '#/definitions/FetchStudentsByQueryAndExamResponse' 
      exams: 
        $ref: '#/definitions/GetExamByClassResponse' 
      
          
  SaveMarksBody:
    type: object
    required:
      - classId
      - examDate
      - subject
      - studentId
    properties:
      classId:
        type: string
        description: "Class Id"
        example: "2"
      examDate:
        type: string
        description: "Date Of Exam"
        example: "2021-09-24"
      subject:
        type: string
        description: "Subject of Exam"
        example: "Maths"
      studentsMarkInfo:
        $ref: '#/definitions/StudentMarkInfo'
      roiId: 
          type: string
          description: roiId field is optional field . It is available when minimal mode is enable. RoiId field is global across school or organisation.
          example: "28"
        
  StudentMarkInfo:
    type: array
    items:
      type: object
      properties: 
        section:
          type: string
          description: "Class Section"
          example: "D"
        studentId:
          type: string
          description: "Student Id"
          example: "1210001"
        set:
          type: string
          description: "Exam set of the student.It is an optional field ."
          example: A
        predictedStudentId:
          type: string
          description: "Predicted Student Id which we are getting after scan ."
          example: "1210001"
        predictionConfidence:
          type: array
          description: "Predicted Student Id accuracy."
          items:
            type: string
            example: "0.9999982118606567"
        studentIdTrainingData:
          type: array
          items:
            type: string
            description: "It contains base 64 encoded images of rollnumber "
            example: "/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAIQAABtbnRyUkdC\nIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAA\nAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlk\nZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAA\nAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAA\nAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAA\nAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3Bh\ncmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADT\nLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAw\nADEANv/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB\nAQEBAQEBAQEBAQEBAQEBAf/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB\nAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/AABEIABwAHAMBIgACEQEDEQH/xAAbAAABBAMA\nAAAAAAAAAAAAAAAGAQQFCAMHCv/EACkQAAIBAwMEAAYDAAAAAAAAAAECAwQFEQAGIRIiMUEHFFFx\ngZETobH/xAAYAQACAwAAAAAAAAAAAAAAAAAEBQABAv/EACURAQACAQMDAwUAAAAAAAAAAAECESEA\nAzESQYEEYfAyUZGh8f/aAAwDAQACEQMRAD8A6wpYaCngnnMaJHCCzuR0qiAKWY+gPyPeh+3bk2rc\nZVjp7jQzuzCMKk0bKW54JDEdWT4zn6DOj+pgWRJ6eSnQwzRmOVXIAKNgNnB4GPeR99Vi+MW3KCHa\n9Ntr4fWlTuaqutERUUEsrSUsYrKVpZZGE5VVEaSFuoYwDxzpH6XZ2t2XRu9UOQkAgUNv7L5+xprc\ng5y00mex2cD4z2utWKe30a4ZaaM9vHafB8HIxnPn8aRaa3gYenTqHB4xz9tONq2242rbtntd4mWs\nuVJRwJVTsykySpGobkYB7lJzzyR9dSsvWHYLBGADjx7/AL0PMIyQeqI0So9mgeCuDxktddVVZzzk\nKbPhzkvWs/i7vNtp0FClNDVTLdJfl5amnhaX5cYZiW6OphhVxkAHkAHjgDte/bBtakjqKG0Xi8XO\nqQGarFOWlywwQrTyqVAz6I8kD1qwiTyBXTtKZz0kZGe30TqHqpmdACqDkYwuMZZRxz9P1ouPrdra\n2zblsspFjMauq5z31CDFVld+xfA/jP8AaNYbJdDfLTS3v+GqpJJgc0dSemVCqqxBUOygdxAIJ5B0\nSRyGRFfHJAz1HnOBnwD/AL+tRtOoiaPpzyASDyMkfv1p/kjOCRkk8H2TnQkk3JLGPSOaW6GseNVK\nCkcv0iX2Hg7cfHX/2Q==\n"
        studentAvailability:
          type: boolean
          description: "Student Availability Flag"
          example: true
        securedMarks:
          type: number
          description: "Total marks Obtained"
          example: 3
        totalMarks:
          type: number
          description: "Total Marks"
          example: 5
        marksInfo:
          $ref: '#/definitions/MarksInfo'  

          
  MarksInfo:
    type: array
    items:
      type: object
      properties: 
        questionId:
          type: string
          description: "question id"
          example: "LO-1"
        obtainedMarks:
          type: string
          description: "total marks obtained"
          example: "110"
        predictedMarks:
          type: string
          description: "Predicted Marks which we are getting after scan "
          example: "11"
        predictionConfidence:
          type: array
          description: "Predicted Marks accuracy."
          items:
            type: string
            example: "22.99"
        tags:
          type: array
          description: tags will only be visible in UI and saved in db when in login API tags will be true.
          items:
            type: string
            example: "poetry"
        trainingData:
          type: array
          items:
            type: string
            description: "It contains base 64 encoded images for marks"
            example: "/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAIQAABtbnRyUkdC\nIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAA\nAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlk\nZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAA\nAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAA\nAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAA\nAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3Bh\ncmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADT\nLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAw\nADEANv/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB\nAQEBAQEBAQEBAQEBAQEBAf/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB\nAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/AABEIABwAHAMBIgACEQEDEQH/xAAaAAACAgMA\nAAAAAAAAAAAAAAAFBgQHAQIK/8QALBAAAgEDAwIFAwUBAAAAAAAAAQIRAwQFACExBhIHExQiUTJh\ngSNBYnGRsf/EABcBAQEBAQAAAAAAAAAAAAAAAAMFAgT/xAAnEQACAQMDAwMFAAAAAAAAAAABEQIh\nQVEAEjEDIoEEE5EyUmGx8f/aAAwDAQACEQMRAD8A7SxbWQooGsUVCY7WA7Y54gfnU23xWId09RjL\ndqTICCaasoE8qRMEfM8/GhXWF16Lorq7IDuovY9M5u8ouDPbUt8dc1VcGVIKlZHEGN9IPgNd5G98\nKelLvI3T3l1kFu7xqtZyzslW4YIJMwqqsD8j76iT6Z9n3pSkBu27U6qEiHREPkAft0Q+aMNol8Mk\nu2M35WrTucRiWEJaKlBSCEVQFJBkyOP2+J+x1u+J6ebsIsqS+wAghZJkyTInfRkQaYpNT7W7RB2O\n3PMDkf5zrBsLOoFapXZX7YKxxBPG421yheMnbZUrev8AdII9tvqqTHigpUeRfOkzxBsbi+6F63x2\nNpNeXmV6Yy2Ms7ekfdVuL6zq26BdiZJqEDYneNLHhN09kekvDDoPD5e2e0yOPw/k3ts/10a/qrkh\nGJAk+V5Z3AO+rUy1ZratbrSVFDqgYdu3u5gSN/g6D5i4q0aAZDBUFhO4BaCdpj4j+hpet6hRHp9o\nMQQWeWRHCpQfA/OshwBmZE9oQsFUGxzfRhGSDUn3AyJPAEcjiBtsCd9Ra13Q7/1atBGgbFoMbwYg\n/wDdJtbMXqNQVWpxUSmW9h3LCSfq20dNc1UpO9OkzNSUklDJ3b+WiBMSCUe0JhqoVGMZ8F6OfVkn\n91Vb4821/9k=\n"
        
  FetchStudentsByQueryAndExamResponse:
    type: array
    items:
      type: object
      properties: 
        studentClass:
          $ref: '#/definitions/StudentClassName'
        section:
          type: string
          example: "D"
        name:
          type: string
          example: "2"
        studentId:
          type: string
          example: "1210001"
        schoolId:
          type: string
          example: "u001"
        studentAvailability:
          type: boolean
          example: true
    
        
  StudentClass:
    type: array
    items:
      type: object
      properties: 
        classId:
          type: string
          description: "Id of class"
          example: "2"
          
  StudentClassName:
    type: array
    items:
      type: object
      properties: 
        classId:
          type: string
          description: "Id of class"
          example: "2"
        className:
          type: string
          description: "class Name"
          example: "Class-2"
          
  GetExamByClassResponse:
    type: array
    items:
      type: object
      properties: 
        subject:
          type: string
          description: "Exam Name"
          example: "Maths"
        examLO: 
          type: string
          description: "Exam LO"
          example: "Maths"
        classId:
          type: string
          description: "Id of class"
          example: "2"
        examDate:
          type: string
          description: "Date of exam"
          example: "01/10/2021"
        totalMarks:
          type: number
          description: "Total Marks"
          example: 20
        type:
          type: string
          description: "type of Exam"
          example: "uphindi1s"
        questions:
          $ref: '#/definitions/Questions'  
        examId:
          type: number
          description: "Exam Id"
          example: 1
        schoolId:
          type: string
          description: "Unique Id"
          example: "u001"
    
  Questions:
    type: array
    items:
      type: object
      properties: 
        questionId:
          type: string
          description: "Question Id"
          example: "1"
        tags: 
          type: array
          items:
            type: object
            properties:
              tagName:
                type: string
                example: "Historic"
              selected:
                type: boolean
                default: false
                example: false
        indicatorTitle:
          type: string
          description: "Indicator Title"
          example: "L0-1"
        questionMarks:
          type: string
          description: "Question Marks"
          example: "1"
          
  rect:
    type: object
    properties:
      top:
        type: string
        example: "129"
      left:
        type: string
        example: "56"
      bottom:
        type: string
        example: "73"
      right:
        type: string
        example: "181"
  
  roi:
    type: array
    items:
      type: object
      properties:
        annotationTags:
          type: string
          example: "ROLLNUMBERID1"
        extractionMethod:
          type: string
          enum: ["NUMERIC_CLASSIFICATION", "CELL_OMR"]
          example: "NUMERIC_CLASSIFICATION"
        roiId:
          type: number
          example: 1
          description: RoiId field is global across school or organisation.
        index:
          type: string
          example: 0
        rect:
          $ref: '#/definitions/rect'
          
  render:
    type: object
    properties:
      index:
        type: string
        example: 1
          
  format:
    type: object
    properties:
      name:
        type: string
        example: "ROLLNUMBER"
      value:
        type: string
        example: "ROLLNUMBER"
        
  validate:
    type: object
    properties:
      regExp:
        type: string
        example: ""
      errorMsg:
        type: string
        example: ""
          
  cells:
    type: array
    items:
      type: object
      properties:
        cellId:
          type: number
          example: 1
        rois:
          $ref: '#/definitions/roi'
        render:
          $ref: '#/definitions/render'
        format:
          $ref: '#/definitions/format'
        validate:
          $ref: '#/definitions/validate'
          

          
  rois:
    type: object
    properties:
      layout:
        type: object
        properties:
          version: 
            type: string
            example: "1.0"
          name:
            type: string
            example: "UP SAT Exam Sheet Form"
          identifierPrefix:
            description: indetifier prefix field is used as an indentifier for ID .
            type: string
            example: ROLLNUMBERID
          threshold:
            type: object
            properties:
              minWidth:
                type: number
                example: 690
                description: Minimum width of layout for detection
              minHeight:
                type: number
                example: 390
                description: Minimum height of layout for detection
              detectionRadius:
                type: number
                example: 12
              experimentalOMRDetection:
                type: boolean
                example: true
                description: when this field is true then pencil omr detection is also possible. 
          cells:
            $ref: '#/definitions/cells' 
      roiId:
        type: number
        example: 1
        
  sections:
    type: array
    items:
      type: object
      properties: 
        section:
          type: string
          example: "B"
        
        
  DefaultBrand:
    type: object
    properties:
      appName:
        type: string
        example: "Saral OCR App"
      themeColor1:
        type: string
        example: "#F09E26"
      themeColor2:
        type: string
        example: "#F09E26"
      logoImage:
        type: string
        example: ""
    
    
  CreateBrandBody:
    type: object
    required:
      - appName
      - logoImage
    properties:
      appName:
        type: string
        example: "Saral OCR App"
      themeColor1:
        type: string
        example: "#F09E26"
      themeColor2:
        type: string
        example: "#F09E26"
      screenLabels:
        type: object
        properties:
          selectDetails:
            type: array
            items:
              properties:
                School:
                  type: string
                  example: "Organisation"   
                SchoolId:
                  type: string
                  example: "Organisation Id"
                Class:
                  type: string
                  example: "Category"
                Section:
                  type: string
                  example: "Skill"
                Subject:
                  type: string
                  example: "Skill Assesment"
          studentList:
            type: array
            items:
              properties:
                School:
                  type: string
                  example: "Organisation"   
                SchoolId:
                  type: string
                  example: "Organisation Id"

          scanHistory:
            type: array
            items:
              properties:
                School:
                  type: string
                  example: "Organisation"   
                SchoolId:
                  type: string
                  example: "Organisation Id"
              
          myScan:
            type: array
            items:
              properties:
                School:
                  type: string
                  example: "Organisation"   
                SchoolId:
                  type: string
                  example: "Organisation Id"
                  
          scanStatus:
            type: array
            items:
              properties:
                School:
                  type: string
                  example: "Organisation"   
                SchoolId:
                  type: string
                  example: "Organisation Id"
            
          scanStatusLocal:
            type: array
            items:
              properties:
                School:
                  type: string
                  example: "Organisation"   
                SchoolId:
                  type: string
                  example: "Organisation Id"
            
          scanHistoryCard:
            type: array
            items:
              properties:
                School:
                  type: string
                  example: "Organisation"   
                SchoolId:
                  type: string
                  example: "Organisation Id"
                Class:
                  type: string
                  example: "Category"
                Section:
                  type: string
                  example: "Skill"
                Subject:
                  type: string
                  example: "Skill Assesment"
                  
          examDetailsPopup:
            type: array
            items:
              type: string
            example: ["Question Id", "Indicator Title", "Question Marks"]
            
          scannedDetailComponent:
            type: array
            items:
              properties:
                Subject:
                  type: string
                  example: "Skill Assesment"
                StudentId:
                  type: string
                  example: "Employee ID"
                Exam:
                  type: string
                  example: "Assesment"
                EmployeDetail:
                  type: string
                  example: "Employe Details"
                CorrectId:
                  type: string
                  example: "please correct employe id"
                RecordNo:
                  type: string
                  example: "Record No"
                ListTableHeading:
                  type: array
                  example: ["Sr No", "Questions", "Rating"]
                  
                  
        
      logoImage:
        type: string


    
  

    
        
        
      
        
      
       
  
        